{"ast":null,"code":"var _jsxFileName = \"/Users/williamcheng/front-back end practice 3/client/src/pages/Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Feed.css';\nimport gsap from 'gsap';\nimport { useGSAP } from '@gsap/react';\nimport Message from '../components/Message';\nimport NewMessage from '../components/NewMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed() {\n  _s();\n  gsap.registerPlugin(useGSAP);\n  const [posts, setPosts] = useState([{}]);\n  const [newMessageTl] = useState(gsap.timeline({\n    repeat: 0,\n    paused: true\n  }));\n  useGSAP(() => {\n    newMessageTl.to(\".new-message-container\", {\n      display: 'flex'\n    });\n    newMessageTl.fromTo(\".new-message-window\", {\n      opacity: 0\n    }, {\n      opacity: 1\n    }, '<');\n  });\n  const openNewMessageWindow = () => {\n    newMessageTl.play();\n  };\n  const closeNewMessageWindow = () => {\n    newMessageTl.reverse();\n  };\n  useEffect(() => {\n    fetch('./posts').then(response => response.json()).then(data => {\n      setPosts(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-row-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed\",\n        children: typeof posts === 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-loading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"feed loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this) : posts.map((post, i) => /*#__PURE__*/_jsxDEV(Message, {\n          post: post\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message-button\",\n        onClick: openNewMessageWindow,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewMessage, {\n      closeNewMessageWindow: closeNewMessageWindow()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"chnme+2xEHbSlpEZmOX8FIlVg+I=\", false, function () {\n  return [useGSAP];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","gsap","useGSAP","Message","NewMessage","jsxDEV","_jsxDEV","Feed","_s","registerPlugin","posts","setPosts","newMessageTl","timeline","repeat","paused","to","display","fromTo","opacity","openNewMessageWindow","play","closeNewMessageWindow","reverse","fetch","then","response","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","i","onClick","_c","$RefreshReg$"],"sources":["/Users/williamcheng/front-back end practice 3/client/src/pages/Feed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './Feed.css';\nimport gsap from 'gsap';\nimport {useGSAP} from '@gsap/react';\nimport Message from '../components/Message';\nimport NewMessage from '../components/NewMessage';\n\n\n\nfunction Feed() {\n  gsap.registerPlugin(useGSAP);\n  const[posts, setPosts] = useState([{}])\n  const[newMessageTl] = useState(gsap.timeline({repeat: 0, paused:true}))\n\n  useGSAP(() => {\n    newMessageTl.to(\".new-message-container\", {display:'flex'});\n    newMessageTl.fromTo(\".new-message-window\", {opacity:0}, {opacity:1}, '<');\n  })\n\n  const openNewMessageWindow = () => {\n    newMessageTl.play();\n  }\n\n  const closeNewMessageWindow = () => {\n    newMessageTl.reverse();\n  }\n\n  useEffect(() => {\n    fetch('./posts').then(\n      response => response.json()\n    ).then(\n      data => {\n        setPosts(data);\n      }\n    )\n  }, [])\n\n  return (\n    <div className='feed-background'>\n        <div className='top-row'>\n          <div className='top-row-bar'></div>\n        </div>\n        <div className='feed-container'>\n            <div className='feed'>\n              {(typeof posts === 'undefined') ? (\n                <div className='feed-loading'>\n                  <h1>feed loading...</h1>\n                </div>\n              ) : (\n                (posts.map((post, i) => (\n                  <Message key={i}\n                    post = {post}\n                  />\n                )))\n              )}\n            </div>\n        </div>\n        <div className='bottom-row'>\n            <div className='new-message-button' onClick={openNewMessageWindow}>\n                <h1>New Message</h1>\n            </div>\n        </div>\n        <NewMessage closeNewMessageWindow={closeNewMessageWindow()}/>\n    </div>\n  )\n}\n\nexport default Feed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}