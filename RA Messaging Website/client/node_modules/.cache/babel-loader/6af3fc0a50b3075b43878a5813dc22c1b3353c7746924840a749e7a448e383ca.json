{"ast":null,"code":"var _jsxFileName = \"/Users/williamcheng/front-back end practice 3/client/src/components/NewMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './NewMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewMessage({\n  newMessageTl,\n  fetchPosts\n}) {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const closeNewMessageWindow = e => {\n    if (e.target.className === 'new-message-container') {\n      newMessageTl.reverse();\n    }\n  };\n  const handleSubmit = () => {\n    if (message !== \"\") {\n      console.log('submitting!');\n      // call api request for new post, send json\n      fetch('/newpost', {\n        //send post request to server\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'userid': 2,\n          'message': message\n        })\n      }).then(\n      //wait for data to be sent to sql database, then when response from server comes back...\n      response => {\n        console.log(response); //log response\n        fetchPosts(); //update state, to also update the react DOM\n        newMessageTl.reverse(); //close the new message window once completed\n      });\n    } else {\n      alert(\"type something in first!\");\n    }\n    setMessage(\"\"); //reset the message field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-message-container\",\n    onClick: e => closeNewMessageWindow(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-message-window\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message-internals\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"message\",\n          maxLength: \"10000\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 17\n  }, this);\n}\n_s(NewMessage, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = NewMessage;\nexport default NewMessage;\nvar _c;\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewMessage","newMessageTl","fetchPosts","_s","message","setMessage","closeNewMessageWindow","e","target","className","reverse","handleSubmit","console","log","fetch","method","headers","body","JSON","stringify","then","response","alert","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","maxLength","value","onChange","_c","$RefreshReg$"],"sources":["/Users/williamcheng/front-back end practice 3/client/src/components/NewMessage.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './NewMessage.css'\n\nfunction NewMessage({newMessageTl, fetchPosts}) {\n        const[message, setMessage] = useState(\"\");\n\n        const closeNewMessageWindow = (e) => {\n                if(e.target.className === 'new-message-container'){\n                        newMessageTl.reverse();\n                }\n        }\n\n        const handleSubmit = () => {\n                if(message !== \"\"){\n                        console.log('submitting!');\n                        // call api request for new post, send json\n                        fetch('/newpost', { //send post request to server\n                                method: \"POST\",\n                                headers: {\n                                        'Content-Type' : 'application/json'\n                                },\n                                body: JSON.stringify({\n                                        'userid' : 2,\n                                        'message' : message\n                                })\n                        }).then( //wait for data to be sent to sql database, then when response from server comes back...\n                                (response) => {\n                                        console.log(response); //log response\n                                        fetchPosts(); //update state, to also update the react DOM\n                                        newMessageTl.reverse(); //close the new message window once completed\n\n                                }\n                        )\n                } else {\n                        alert(\"type something in first!\");\n                }\n                setMessage(\"\"); //reset the message field\n        }\n \n        return (\n                <div className='new-message-container' onClick={(e) => closeNewMessageWindow(e)}>\n                        <div className='new-message-window'>\n                                <div className='new-message-internals'>\n                                        <h3>New Message</h3>\n                                        <textarea\n                                                type=\"text\" \n                                                name=\"message\"  \n                                                maxLength=\"10000\"\n                                                value={message}\n                                                onChange={(e) => setMessage(e.target.value)}\n                                        />\n                                        <div className='submit-button'>\n                                                <button onClick={handleSubmit}>Submit</button>\n                                        </div>\n                                </div>\n                        </div>\n                </div>\n        )\n}\n\nexport default NewMessage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,UAAUA,CAAC;EAACC,YAAY;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMS,qBAAqB,GAAIC,CAAC,IAAK;IAC7B,IAAGA,CAAC,CAACC,MAAM,CAACC,SAAS,KAAK,uBAAuB,EAAC;MAC1CR,YAAY,CAACS,OAAO,CAAC,CAAC;IAC9B;EACR,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACnB,IAAGP,OAAO,KAAK,EAAE,EAAC;MACVQ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B;MACAC,KAAK,CAAC,UAAU,EAAE;QAAE;QACZC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACD,cAAc,EAAG;QACzB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACb,QAAQ,EAAG,CAAC;UACZ,SAAS,EAAGf;QACpB,CAAC;MACT,CAAC,CAAC,CAACgB,IAAI;MAAE;MACAC,QAAQ,IAAK;QACNT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC,CAAC,CAAC;QACvBnB,UAAU,CAAC,CAAC,CAAC,CAAC;QACdD,YAAY,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC;MAEhC,CACR,CAAC;IACT,CAAC,MAAM;MACCY,KAAK,CAAC,0BAA0B,CAAC;IACzC;IACAjB,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACQN,OAAA;IAAKU,SAAS,EAAC,uBAAuB;IAACc,OAAO,EAAGhB,CAAC,IAAKD,qBAAqB,CAACC,CAAC,CAAE;IAAAiB,QAAA,eACxEzB,OAAA;MAAKU,SAAS,EAAC,oBAAoB;MAAAe,QAAA,eAC3BzB,OAAA;QAAKU,SAAS,EAAC,uBAAuB;QAAAe,QAAA,gBAC9BzB,OAAA;UAAAyB,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpB7B,OAAA;UACQ8B,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,SAAS;UACdC,SAAS,EAAC,OAAO;UACjBC,KAAK,EAAE5B,OAAQ;UACf6B,QAAQ,EAAG1B,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACwB,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACF7B,OAAA;UAAKU,SAAS,EAAC,eAAe;UAAAe,QAAA,eACtBzB,OAAA;YAAQwB,OAAO,EAAEZ,YAAa;YAAAa,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEtB;AAACzB,EAAA,CAvDQH,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAyDnB,eAAeA,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}